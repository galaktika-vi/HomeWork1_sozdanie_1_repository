<!DOCTYPE html>
<html lang="ru">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>CryptoAverage</title>
    <link rel="stylesheet" href="style/style.css" />
    <style>
      input,
      button {
        display: block;
        margin-bottom: 10px;
      }

      .results-container {
        position: relative;
        top: 20px;
        left: 50%;
        transform: translate(-50%, 0%);
        display: none;
      }
    </style>
  </head>
  <body>
    <h1>CryptoAverage</h1>
    <div>
      <label for="language">Язык:</label>
      <select id="language" onchange="changeLanguage()">
        <option value="ru">Русский</option>
        <option value="en">English</option>
      </select>
    </div>
    <div class="input-container">
      <form>
        <label for="buyCount">Введите количество покупок:</label>
        <input
          type="number"
          id="buyCount"
          min="0"
          step="1"
          style="width: 280px"
        />
        <label for="sellCount">Введите количество продаж:</label>
        <input
          type="number"
          id="sellCount"
          min="0"
          step="1"
          style="width: 280px"
        />
        <label for="leverage">Введите плечо:</label>
        <input
          type="number"
          id="leverage"
          min="1"
          step="1"
          value="1"
          style="width: 280px"
        />
        <input
          type="button"
          value="Создать поля ввода"
          onclick="generateInputs()"
          style="width: 290px"
        />
        <div id="inputContainer"></div>
        <input
          type="button"
          value="Рассчитать"
          onclick="calculate()"
          style="width: 300px; display: none"
        />
      </form>
    </div>
    <div class="results-container">
      <div id="results">
        <h2>Результаты</h2>
        <p>Средняя цена покупки: <span id="averageBuyPrice"></span></p>
        <p>Средняя цена продажи: <span id="averageSellPrice"></span></p>
        <p>Доходность: <span id="profit"></span></p>
        <p>Доходность с учетом плеча: <span id="leveragedProfit"></span></p>
        <p>
          Прибыль в сумме с учетом плеча:
          <span id="totalLeveragedProfit"></span>
        </p>
        <p>Количество купленных монет: <span id="coinsBought"></span></p>
        <p>Общая сумма потраченная на покупку: <span id="totalSpent"></span></p>
        <p>Количество монет после продажи: <span id="coinsLeft"></span></p>
        <p>Остаток баланса: <span id="balanceLeft"></span></p>
        <input
          type="button"
          value="Сохранить результаты в TXT"
          onclick="saveResultsToCSV()"
        />
      </div>
    </div>
    <script>
      function generateInputs() {
        const buyCount = parseInt(document.getElementById("buyCount").value);
        const sellCount = parseInt(document.getElementById("sellCount").value);
        const inputContainer = document.getElementById("inputContainer");

        inputContainer.innerHTML = "";

        for (let i = 1; i <= buyCount; i++) {
          const buyPriceLabel = document.createElement("label");
          buyPriceLabel.textContent = "Введите цену покупки №" + i + ":";
          inputContainer.appendChild(buyPriceLabel);
          const buyPriceInput = document.createElement("input");
          buyPriceInput.type = "number";
          buyPriceInput.step = "0.01";
          buyPriceInput.id = "buyPrice" + i;
          inputContainer.appendChild(buyPriceInput);

          const buyQuantityLabel = document.createElement("label");
          buyQuantityLabel.textContent =
            "Введите количество покупки №" + i + ":";
          inputContainer.appendChild(buyQuantityLabel);
          const buyQuantityInput = document.createElement("input");
          buyQuantityInput.type = "number";
          buyQuantityInput.step = "0.01";
          buyQuantityInput.id = "buyQuantity" + i;
          inputContainer.appendChild(buyQuantityInput);
        }
        for (let i = 1; i <= sellCount; i++) {
          const sellPriceLabel = document.createElement("label");
          sellPriceLabel.textContent = "Введите цену продажи №" + i + ":";
          inputContainer.appendChild(sellPriceLabel);
          const sellPriceInput = document.createElement("input");
          sellPriceInput.type = "number";
          sellPriceInput.step = "0.01";
          sellPriceInput.id = "sellPrice" + i;
          inputContainer.appendChild(sellPriceInput);

          const sellQuantityLabel = document.createElement("label");
          sellQuantityLabel.textContent =
            "Введите количество продажи №" + i + ":";
          inputContainer.appendChild(sellQuantityLabel);
          const sellQuantityInput = document.createElement("input");
          sellQuantityInput.type = "number";
          sellQuantityInput.step = "0.01";
          sellQuantityInput.id = "sellQuantity" + i;
          inputContainer.appendChild(sellQuantityInput);
        }

        const calculateButton = document.querySelector(
          "input[value='Рассчитать']"
        );
        calculateButton.style.display =
          buyCount > 0 && sellCount > 0 ? "block" : "none";
        document.querySelector("input[onclick='calculate()']").style.display =
          "block";
      }

      function calculate() {
        const buyCount = parseInt(document.getElementById("buyCount").value);
        const sellCount = parseInt(document.getElementById("sellCount").value);
        const leverage = parseInt(document.getElementById("leverage").value);

        let buySum = 0;
        let sellSum = 0;
        let totalBuys = 0;
        let totalSells = 0;

        for (let i = 1; i <= buyCount; i++) {
          const buyPrice = parseFloat(
            document.getElementById("buyPrice" + i).value
          );
          const buyQuantity = parseFloat(
            document.getElementById("buyQuantity" + i).value
          );

          buySum += buyPrice * buyQuantity;
          totalBuys += buyQuantity;
        }

        for (let i = 1; i <= sellCount; i++) {
          const sellPrice = parseFloat(
            document.getElementById("sellPrice" + i).value
          );
          const sellQuantity = parseFloat(
            document.getElementById("sellQuantity" + i).value
          );

          sellSum += sellPrice * sellQuantity;
          totalSells += sellQuantity;
        }

        const averageBuyPrice = buySum / totalBuys;
        const averageSellPrice = sellSum / totalSells;
        const profit =
          ((averageSellPrice - averageBuyPrice) / averageBuyPrice) * 100;
        const leveragedProfit = profit * leverage;
        const totalLeveragedProfit = (sellSum - buySum) * leverage;
        const coinsBought = totalBuys;
        const totalSpent = buySum;
        const coinsLeft = totalBuys - totalSells;
        const balanceLeft = totalSpent + totalLeveragedProfit;

        document.getElementById("averageBuyPrice").textContent =
          averageBuyPrice.toFixed(8);
        document.getElementById("averageSellPrice").textContent =
          averageSellPrice.toFixed(8);
        document.getElementById("profit").textContent = profit.toFixed(8) + "%";
        document.getElementById("leveragedProfit").textContent =
          leveragedProfit.toFixed(8) + "%";
        document.getElementById("totalLeveragedProfit").textContent =
          totalLeveragedProfit.toFixed(8);
        document.getElementById("coinsBought").textContent =
          coinsBought.toFixed(8);
        document.getElementById("totalSpent").textContent =
          totalSpent.toFixed(8);
        document.getElementById("coinsLeft").textContent = coinsLeft.toFixed(8);
        document.getElementById("balanceLeft").textContent =
          balanceLeft.toFixed(8);

        document.querySelector(".results-container").style.display = "block";
      }

      document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll("input").forEach(function (input) {
          input.addEventListener("keydown", function (event) {
            if (event.key === "Enter") {
              event.preventDefault();
              if (
                input.id === "buyCount" ||
                input.id === "sellCount" ||
                input.id === "leverage"
              ) {
                generateInputs();
              } else {
                calculate();
              }
            }
          });
        });
      });

      function saveResultsToCSV() {
        const averageBuyPrice =
          document.getElementById("averageBuyPrice").textContent;
        const averageSellPrice =
          document.getElementById("averageSellPrice").textContent;
        const profit = document.getElementById("profit").textContent;
        const leveragedProfit =
          document.getElementById("leveragedProfit").textContent;
        const totalLeveragedProfit = document.getElementById(
          "totalLeveragedProfit"
        ).textContent;
        const coinsBought = document.getElementById("coinsBought").textContent;
        const totalSpent = document.getElementById("totalSpent").textContent;
        const coinsLeft = document.getElementById("coinsLeft").textContent;
        const balanceLeft = document.getElementById("balanceLeft").textContent;

        const data = [
          ["Средняя цена покупки", averageBuyPrice],
          ["Средняя цена продажи", averageSellPrice],
          ["Доходность", profit],
          ["Доходность с учетом плеча", leveragedProfit],
          ["Прибыль в сумме с учетом плеча", totalLeveragedProfit],
          ["Количество купленных монет", coinsBought],
          ["Общая сумма потраченная на покупку", totalSpent],
          ["Количество монет после продажи", coinsLeft],
          ["Остаток баланса", balanceLeft],
        ];

        const csvContent = data
          .map((row) => row.join(":"))
          .join("\n")
          .replace(/,/g, ".");
        const blob = new Blob([csvContent], {
          type: "text/plain;charset=utf-8;",
        });
        const link = document.createElement("a");
        const url = URL.createObjectURL(blob);
        link.setAttribute("href", url);
        link.setAttribute("download", "cryptoaverage_results.txt");
        link.style.visibility = "hidden";
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
      }
    </script>
  </body>
  <script>
     function changeLanguage() {
    const language = document.getElementById("language").value;
       const translation = translations[language];
       const languageSelect = document.getElementById("language");
       const selectedLanguage = languageSelect.value;

       const translations = {
      ru: {
           title: "CryptoAverage",
         en: {
           title: "CryptoAverage",
           buyCount: "Enter the number of purchases:",
           sellCount: "Enter the number of sales:",
           leverage: "Enter leverage:",
           generateInputs: "Create input fields",
           calculate: "Calculate",
         },
         ru: {
           title: "CryptoAverage",
           buyCount: "Введите количество покупок:",
           sellCount: "Введите количество продаж:",
           leverage: "Введите плечо:",
           generateInputs: "Создать поля ввода",
           calculate: "Рассчитать",
         },
       };

       const elements = {
         title: document.getElementById("title"),
         buyCount: document.querySelector("label[for='buyCount']"),
         sellCount: document.querySelector("label[for='sellCount']"),
         leverage: document.querySelector("label[for='leverage']"),
         generateInputs: document.querySelector("input[value='Создать поля ввода']"),
         calculate: document.querySelector("input[value='Рассчитать']"),
       };

       for (let key in elements) {
         elements[key].textContent = translations[selectedLanguage][key];
       }
     }
  </script>
</html>
